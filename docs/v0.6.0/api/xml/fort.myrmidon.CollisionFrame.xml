<?xml version='1.0' encoding='utf-8'?>
<struct id="fort::myrmidon::CollisionFrame" name="CollisionFrame" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Reports all <ref ref="fort::myrmidon::Collision#fort::myrmidon::Collision">fort::myrmidon::Collision</ref> happening at a given time.</brief>
  <field id="fort::myrmidon::CollisionFrame::FrameTime" name="FrameTime">
    <brief>The <ref ref="fort::myrmidon::Time#fort::myrmidon::Time">fort::myrmidon::Time</ref> when the interaction happens</brief>
    <type name="Time" ref="fort::myrmidon::Time#fort::myrmidon::Time" />
  </field>
  <field id="fort::myrmidon::CollisionFrame::Space" name="Space">
    <brief>Reports the <ref ref="fort::myrmidon::CollisionFrame#fort::myrmidon::CollisionFrame::Space">Space</ref> this frame is taken from</brief>
    <type name="SpaceID" ref="fort::myrmidon#fort::myrmidon::SpaceID" />
  </field>
  <field id="fort::myrmidon::CollisionFrame::Collisions" name="Collisions">
    <brief>The <ref ref="fort::myrmidon::Collision#fort::myrmidon::Collision">fort::myrmidon::Collision</ref> happenning at <ref ref="fort::myrmidon::CollisionFrame#fort::myrmidon::CollisionFrame::FrameTime">fort::myrmidon::CollisionFrame::FrameTime</ref>
    </brief>
    <type class="template" name="std::vector">
      <template-arguments>
        <type name="Collision" ref="fort::myrmidon::Collision#fort::myrmidon::Collision" />
      </template-arguments>
    </type>
  </field>
  <typedef id="fort::myrmidon::CollisionFrame::ConstPtr" name="ConstPtr">
    <brief>A pointer to a CollisionFrame</brief>
    <type class="template" name="std::shared_ptr">
      <template-arguments>
        <type name="CollisionFrame" qualifier=" const" ref="fort::myrmidon::CollisionFrame#fort::myrmidon::CollisionFrame" />
      </template-arguments>
    </type>
  </typedef>
</struct>
